version: '{build}'

branches:
  only:
  - master
  - develop

image:
- Ubuntu2004
- Visual Studio 2022
- Visual Studio 2019

matrix:
  fast_finish: false

init:
- cmd: |-
    echo %APPVEYOR_BUILD_WORKER_IMAGE%
    if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" ( set generator="Visual Studio 16 2019" )
    if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2022" ( set generator="Visual Studio 17 2022" )
    echo %generator%
- sh: |-
    pushd .
    cd $HOME
    python --version
    git clone https://github.com/emscripten-core/emsdk.git
    cd emsdk
    ./emsdk install 3.1.68
    ./emsdk activate 3.1.68
    source ./emsdk_env.sh
    popd

install:
- sh: |-
    sudo apt-get update
    sudo apt-get install -y g++-10 clang-12 gcovr

before_build:
- cmd: |-
    cmake --version
    cmake -G %generator% -A x64 -S . --preset debug
- sh: |-
    cmake --version

    echo && echo "------- GCC PROJECT GENERATION -------"
    g++-10 --version
    cmake -S . --preset=ci-g++-10

    echo && echo "------- CLANG PROJECT GENERATION -------"
    clang++-10 --version
    cmake -S . --preset=ci-clang++-12

    echo && echo "------- UNDEFINED BEHAVIOR SANITIZER PROJECT GENERATION -------"
    clang++ --version
    cmake -S . --preset=ci-ubsan

    echo && echo "------- EMSCRIPTEN PROJECT GENERATION -------"
    $EMSDK/upstream/emscripten/emcc -v
    cmake -S . --preset=wasm-debug

    echo && echo "------- COVERAGE PROJECT GENERATION -------"
    g++-10 --version
    cmake -S . --preset=ci-coverage


build_script:
- cmd: cmake --build build/debug --config Debug -- /verbosity:minimal /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
- sh: |-
    echo && echo "------- GCC BUILD -------"
    cmake --build build/ci-g++-10
    echo && echo "------- CLANG BUILD -------"
    cmake --build build/ci-clang++-12
    echo && echo "------- UNDERINED BEHAVIOR SANITIZER BUILD -------"
    cmake --build build/ci-ubsan
    echo && echo "------- EMSCRIPTEN BUILD -------"
    cmake --build build/wasm-debug
    echo && echo "------- COVERAGE BUILD -------"
    cmake --build build/ci-coverage --target circle-reactive-coverage-xml

test_script:
- cmd: |-
    cd build\debug\test\Debug\
    circle-reactive-test.exe
- sh: |-
    echo && echo "------- GCC BUILD TEST -------" && ./build/ci-g++10/test/circle-reactive-test
    echo && echo "------- CLANG BUILD TEST -------" && ./build/ci-clang++-12/test/circle-reactive-test
    echo && echo "------- UNDERINED BEHAVIOR SANITIZER RUN -------" && ./build/ci-ubsan/test/circle-reactive-test
    echo && echo "------- EMSCRIPTEN BUILD TEST -------" && node ./build/wasm-debug/test/circle-reactive-test

on_success:
- sh: |-
    cd build/ci-coverage/test
    curl -Os https://uploader.codecov.io/latest/linux/codecov
    chmod +x codecov
    ./codecov -f circle-reactive-test-coverage.xml
